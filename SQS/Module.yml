Module: ServerlessPatterns.SQS
Using:
  - Module: LambdaSharp.S3.IO:0.5@lambdasharp
Items:

  # SQS
  - Resource: Queue
    Scope: public
    Description: SQS Queue
    Type: AWS::SQS::Queue
    Allow: Receive

  # S3 Storage
  - Parameter: BucketArn
    Scope: StoreAndEmitFunction
    Section: S3 Storage Parameters
    Description: Bucket for data archiving
    Type: AWS::S3::Bucket
    Allow: ReadWrite
    Default: ""
    Properties: { }

  - Resource: EmptyMyBucket
    Description: Automatically deleted contents of S3 bucket when CloudFormation stack is deleted (Don't use in production!)
    Type: LambdaSharp::S3::EmptyBucket
    Properties:
      Bucket: !Ref BucketArn

  # SNS Notifications
  - Parameter: ContentCreatedTopicArn
    Scope: public, StoreAndEmitFunction
    Section: SNS Notification Parameters
    Description: Content Created Notification SNS Topic
    Type: AWS::SNS::Topic
    Allow: Publish
    Default: ""
    Properties: { }

  - Parameter: ContentUpdatedTopicArn
    Scope: public, StoreAndEmitFunction
    Section: SNS Notification Parameters
    Description: Content Updated Notification SNS Topic
    Type: AWS::SNS::Topic
    Allow: Publish
    Default: ""
    Properties: { }

  - Parameter: ContentDeletedTopicArn
    Scope: public, StoreAndEmitFunction
    Section: SNS Notification Parameters
    Description: Content Deleted Notification SNS Topic
    Type: AWS::SNS::Topic
    Allow: Publish
    Default: ""
    Properties: { }

  - Function: StoreAndEmitFunction
    Memory: 1769
    Timeout: 30
    Sources:
      - Sqs: Queue
